<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.apache.turbine.fluxtest</groupId>
	<artifactId>fluxtest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>My Turbine Web Application</name>

	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>


			<!-- (target) resource and filtering is not used at all ? at least removed 
				setting absolute path e.g. with ${project.build.directory}, which does thrown 
				an exception with mvn eclipse:eclipse - path is then incorrectly relativized. -->
			<resource>
				<targetPath>../torque/schema</targetPath>
				<filtering>true</filtering>
				<directory>src/main/torque-schema</directory>
				<includes>
					<include>*.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${maven.compile.source}</source>
					<target>${maven.compile.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.torque</groupId>
				<artifactId>torque-maven-plugin</artifactId>
				<version>4.0</version>
				<configuration>
					<schemaDir>${project.basedir}/src/main/torque-schema</schemaDir>
					<useClasspath>true</useClasspath>
					<runOnlyOnSchemaChange>false</runOnlyOnSchemaChange>
					<targetDatabase>auto</targetDatabase>
				</configuration>
				<executions>
					<execution>
						<id>torque-om</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<packaging>classpath</packaging>
							<configPackage>org.apache.torque.templates.om</configPackage>
							<sourceDir>${project.basedir}/src/main/torque-schema</sourceDir>
							<loglevel>error</loglevel>
							<options>
								<torque.database>auto</torque.database>
								<torque.om.package>org.apache.turbine.fluxtest.om</torque.om.package>
								<torque.om.addGetByNameMethods>false</torque.om.addGetByNameMethods>
								<torque.om.save.saveException>TorqueException</torque.om.save.saveException>
								<torque.om.useIsForBooleanGetters>true</torque.om.useIsForBooleanGetters>
								<torque.om.useManagers>false</torque.om.useManagers>
								<torque.om.addTimeStamp>true</torque.om.addTimeStamp>
								<torque.om.objectIsCaching>true</torque.om.objectIsCaching>
								<torque.om.save.addSaveMethods>true</torque.om.save.addSaveMethods>
								<torque.om.addGetByNameMethods>true</torque.om.addGetByNameMethods>
								<torque.om.complexObjectModel>true</torque.om.complexObjectModel>
							</options>
							<outputDirMap>
								<modifiable>${project.build.sourceDirectory}</modifiable>
							</outputDirMap>
						</configuration>
					</execution>
					<execution>
						<id>torque-sql-mysql</id><!-- auto -->
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<packaging>classpath</packaging>
							<configPackage>org.apache.torque.templates.sql</configPackage>
							<sourceDir>${project.basedir}/src/main/torque-schema</sourceDir>
							<defaultOutputDir>${project.build.directory}/generated-sql/torque/mysql</defaultOutputDir>
							<defaultOutputDirUsage>none</defaultOutputDirUsage>
							<loglevel>error</loglevel>
							<options>
								<torque.database>mysql</torque.database>
							</options>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.torque</groupId>
						<artifactId>torque-templates</artifactId>
						<version>4.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<archive>
						<manifestEntries>
							<X-Compile-Source-JDK>${maven.compile.source}</X-Compile-Source-JDK>
							<X-Compile-Target-JDK>${maven.compile.target}</X-Compile-Target-JDK>
						</manifestEntries>
					</archive>
					<!-- containerConfigXML>WEB-INF/build/context.xml</containerConfigXML -->
				</configuration>
			</plugin>


			<!-- Required to execute torque database build -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>

					<!-- Please update with your database configuration -->
					<driver>com.mysql.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost:3306/turbine</url>
					<username>ipsys</username>
					<password>ip2002</password>
					<onError>continue</onError>
					<autocommit>true</autocommit>
					<orderFile>descending</orderFile>
				</configuration>

				<!-- update with your database driver dependency -->
				<!-- this is mysql specific -->
				<dependencies>
					<dependency>
						<artifactId>mysql-connector-java</artifactId>
						<groupId>mysql</groupId>
						<version>5.1.40</version>
					</dependency>
				</dependencies>
				<!-- this is mysql specific -->

				<!-- comment out below if you don't want to recreate the db -->
				<executions>
					<execution>
						<id>create-db</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<fileset>
								<basedir>${project.build.directory}/generated-sql/torque/mysql</basedir>
								<!-- basedir>${basedir}/target/generated-sql</basedir -->
								<includes>
									<include>*.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<execution>
						<id>create-data</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<orderFile>ascending</orderFile>
							<srcFiles>
								<srcFile>${project.basedir}/docs/sample-mysql-data/_application-data.sql</srcFile>
								<srcFile>${project.basedir}/docs/sample-mysql-data/_turbine-security-data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>

			</plugin>

			<!-- jetty:run checks deployed war http://localhost:8081/app/ Using jetty 
				8 as supporting java 6. Other specs cft. http://www.eclipse.org/jetty/documentation/9.3.0.v20150612/what-jetty-version.html -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.16.v20140903</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<dumpOnStart>true</dumpOnStart>
					<reload>manual</reload>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>8081</port>
						</connector>
					</connectors>
					<!--webApp> <contextPath>/app</contextPath> </webApp -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>

		<!-- update with the database driver of your choice -->
		<dependency>
			<artifactId>mysql-connector-java</artifactId>
			<groupId>mysql</groupId>
			<version>5.1.40</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.turbine</groupId>
			<artifactId>turbine</artifactId>
			<version>${turbine.core}</version>
		</dependency>
		<!-- yaafi is optional. NOTICE: 1.0.7 has group org.apache.turbine not 
			org.apache.fulcrum -->
		<dependency>
			<groupId>org.apache.turbine</groupId>
			<artifactId>fulcrum-yaafi</artifactId>
			<version>1.0.7</version>
		</dependency>
		<!-- if using intake -->
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-intake</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- include some optional dependencies required in example componentConfiguration.xml -->
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-cache</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-upload</artifactId>
			<version>1.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-security-memory</artifactId>
			<version>${fulcrum.security}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-security-torque</artifactId>
			<version>${fulcrum.security}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-security-api</artifactId>
			<version>${fulcrum.security}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-security-api</artifactId>
			<version>${fulcrum.security}</version>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.fulcrum</groupId>
			<artifactId>fulcrum-json-jackson2</artifactId>
			<version>${fulcrum.json}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-json-org</artifactId>
			<!-- version>${</version -->
			<!-- 2.7.x has Java 7 baseline, but not compiled with Java 6 support (version 
				51 error:), cft. https://github.com/FasterXML/jackson/wiki/Jackson-Release-2.7 
				Changes: compatibility: .. should still be possible to use Jackson 2.7 on 
				Java 6, but not compile, build. With Jackson 2.8, Java 7 languages features 
				will be allowed -->
			<version>2.6.6</version>
		</dependency>
		<!-- if activating useJsonPath include jayway dependency -->
		<!-- dependency> <groupId>com.jayway.jsonpath</groupId> <artifactId>json-path</artifactId> 
			<version>2.3.0</version> <exclusions> <exclusion> <groupId>net.minidev</groupId> 
			<artifactId>json-smart</artifactId> </exclusion> </exclusions> </dependency -->

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<properties>
		<maven.compile.source>1.7</maven.compile.source>
		<maven.compile.target>1.7</maven.compile.target>
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<fulcrum.json>1.1.1</fulcrum.json>
		<fulcrum.security>1.1.2-SNAPSHOT</fulcrum.security>
		<turbine.core>4.0.1-SNAPSHOT</turbine.core>
	</properties>

</project>
